// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "wilcoxauc_types.h"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// inPlaceRankMean
int inPlaceRankMean(vec& v_temp, int idx_begin, int idx_end);
RcppExport SEXP _wilcoxauc_inPlaceRankMean(SEXP v_tempSEXP, SEXP idx_beginSEXP, SEXP idx_endSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec& >::type v_temp(v_tempSEXP);
    Rcpp::traits::input_parameter< int >::type idx_begin(idx_beginSEXP);
    Rcpp::traits::input_parameter< int >::type idx_end(idx_endSEXP);
    rcpp_result_gen = Rcpp::wrap(inPlaceRankMean(v_temp, idx_begin, idx_end));
    return rcpp_result_gen;
END_RCPP
}
// inPlaceRankMin
int inPlaceRankMin(vec& v_temp, int idx_begin, int idx_end);
RcppExport SEXP _wilcoxauc_inPlaceRankMin(SEXP v_tempSEXP, SEXP idx_beginSEXP, SEXP idx_endSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec& >::type v_temp(v_tempSEXP);
    Rcpp::traits::input_parameter< int >::type idx_begin(idx_beginSEXP);
    Rcpp::traits::input_parameter< int >::type idx_end(idx_endSEXP);
    rcpp_result_gen = Rcpp::wrap(inPlaceRankMin(v_temp, idx_begin, idx_end));
    return rcpp_result_gen;
END_RCPP
}
// rank_vec
int rank_vec(vec& x, const vec& p, int nrow, int ncol, std::string method);
RcppExport SEXP _wilcoxauc_rank_vec(SEXP xSEXP, SEXP pSEXP, SEXP nrowSEXP, SEXP ncolSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const vec& >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(rank_vec(x, p, nrow, ncol, method));
    return rcpp_result_gen;
END_RCPP
}
// sumGroups
mat sumGroups(const vec& x, const vec& p, const vec& i, int ncol, const uvec& groups, int ngroups);
RcppExport SEXP _wilcoxauc_sumGroups(SEXP xSEXP, SEXP pSEXP, SEXP iSEXP, SEXP ncolSEXP, SEXP groupsSEXP, SEXP ngroupsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const vec& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const vec& >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    Rcpp::traits::input_parameter< const uvec& >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< int >::type ngroups(ngroupsSEXP);
    rcpp_result_gen = Rcpp::wrap(sumGroups(x, p, i, ncol, groups, ngroups));
    return rcpp_result_gen;
END_RCPP
}
// nnzeroGroups
mat nnzeroGroups(const vec& p, const vec& i, int ncol, const uvec& groups, int ngroups);
RcppExport SEXP _wilcoxauc_nnzeroGroups(SEXP pSEXP, SEXP iSEXP, SEXP ncolSEXP, SEXP groupsSEXP, SEXP ngroupsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const vec& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const vec& >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    Rcpp::traits::input_parameter< const uvec& >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< int >::type ngroups(ngroupsSEXP);
    rcpp_result_gen = Rcpp::wrap(nnzeroGroups(p, i, ncol, groups, ngroups));
    return rcpp_result_gen;
END_RCPP
}
// sumGroupsT
mat sumGroupsT(const vec& x, const vec& p, const vec& i, int ncol, int nrow, const uvec& groups, int ngroups);
RcppExport SEXP _wilcoxauc_sumGroupsT(SEXP xSEXP, SEXP pSEXP, SEXP iSEXP, SEXP ncolSEXP, SEXP nrowSEXP, SEXP groupsSEXP, SEXP ngroupsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const vec& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const vec& >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< const uvec& >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< int >::type ngroups(ngroupsSEXP);
    rcpp_result_gen = Rcpp::wrap(sumGroupsT(x, p, i, ncol, nrow, groups, ngroups));
    return rcpp_result_gen;
END_RCPP
}
// nnzeroGroupsT
mat nnzeroGroupsT(const vec& x, const vec& p, const vec& i, int ncol, int nrow, const uvec& groups, int ngroups);
RcppExport SEXP _wilcoxauc_nnzeroGroupsT(SEXP xSEXP, SEXP pSEXP, SEXP iSEXP, SEXP ncolSEXP, SEXP nrowSEXP, SEXP groupsSEXP, SEXP ngroupsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const vec& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const vec& >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< const uvec& >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< int >::type ngroups(ngroupsSEXP);
    rcpp_result_gen = Rcpp::wrap(nnzeroGroupsT(x, p, i, ncol, nrow, groups, ngroups));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_wilcoxauc_inPlaceRankMean", (DL_FUNC) &_wilcoxauc_inPlaceRankMean, 3},
    {"_wilcoxauc_inPlaceRankMin", (DL_FUNC) &_wilcoxauc_inPlaceRankMin, 3},
    {"_wilcoxauc_rank_vec", (DL_FUNC) &_wilcoxauc_rank_vec, 5},
    {"_wilcoxauc_sumGroups", (DL_FUNC) &_wilcoxauc_sumGroups, 6},
    {"_wilcoxauc_nnzeroGroups", (DL_FUNC) &_wilcoxauc_nnzeroGroups, 5},
    {"_wilcoxauc_sumGroupsT", (DL_FUNC) &_wilcoxauc_sumGroupsT, 7},
    {"_wilcoxauc_nnzeroGroupsT", (DL_FUNC) &_wilcoxauc_nnzeroGroupsT, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_wilcoxauc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
